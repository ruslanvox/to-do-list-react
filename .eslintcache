[{"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/index.js":"1","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/reportWebVitals.js":"2","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/app/app.js":"3","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/search-panel/index.js":"4","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/app-header/index.js":"5","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-status-filter/index.js":"6","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list/index.js":"7","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list-item/index.js":"8","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-add-form/index.js":"9","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/search-panel/app-search-panel.js":"10","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/app-header/app-header.js":"11","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list-item/post-list-item.js":"12","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-status-filter/post-status-filter.js":"13","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list/post-list.js":"14","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-add-form/post-add-form.js":"15"},{"size":515,"mtime":1609783501986,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1609577579919,"results":"18","hashOfConfig":"17"},{"size":4394,"mtime":1611906676630,"results":"19","hashOfConfig":"17"},{"size":73,"mtime":1609785904309,"results":"20","hashOfConfig":"17"},{"size":62,"mtime":1609784049648,"results":"21","hashOfConfig":"17"},{"size":84,"mtime":1609786276400,"results":"22","hashOfConfig":"17"},{"size":59,"mtime":1609786890073,"results":"23","hashOfConfig":"17"},{"size":72,"mtime":1609787048912,"results":"24","hashOfConfig":"17"},{"size":69,"mtime":1609787359762,"results":"25","hashOfConfig":"17"},{"size":635,"mtime":1611865858134,"results":"26","hashOfConfig":"17"},{"size":712,"mtime":1611908073132,"results":"27","hashOfConfig":"17"},{"size":870,"mtime":1611864300994,"results":"28","hashOfConfig":"17"},{"size":1003,"mtime":1611904592970,"results":"29","hashOfConfig":"17"},{"size":703,"mtime":1611864300995,"results":"30","hashOfConfig":"17"},{"size":977,"mtime":1611864300993,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1wdf2gu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/index.js",[],["66","67"],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/reportWebVitals.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/app/app.js",["68","69","70","71"],"import AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list\";\nimport PostAddForm from '../post-add-form'\nimport './app.css'\nimport {Component} from \"react\"\n\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.count = 4;\n        this.state = {\n            filteredData: [],\n            data: [\n                {label: \"Помыть посуду\", important: false, id: 1, like: false},\n                {label: \"Вынести мусор\", important: false, id: 2, like: false},\n                {label: \"Купить молоко\", important: false, id: 3, like: false}\n            ], term: '', filter: 'all'\n        }\n        this.state.filteredData = this.state.data;\n        this.onDelete = this.onDelete.bind(this);\n        this.onLike = this.onLike.bind(this);\n        this.onImportant = this.onImportant.bind(this)\n        this.addPost = this.addPost.bind(this)\n        this.onValueChange = this.onValueChange.bind(this)\n        this.onFilterSelect = this.onFilterSelect.bind(this)\n\n\n    }\n\n    addPost(text) {\n        let newElement = {label: text, important: false, id: this.count++, like: false}\n        this.setState((state) => {\n            let newData = state.data.slice()\n            newData.push(newElement)\n            return {data: newData}\n        })\n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) {\n            return items\n        }\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\n        })\n\n    }\n\n    filterPost(items, filter) {\n        if (filter === 'like') {\n            return items.filter((elem) => {\n                return elem.like == true\n            })\n        } else if(filter === 'important') {\n            return items.filter((elem) => {\n                return elem.important == true\n            })\n        }\n        else return items\n    }\n\n    onValueChange(term) {\n        this.setState({term})\n    }\n\n    onImportant(id) {\n        // console.log(id)\n        this.setState((state) => {\n                let newData = JSON.parse(JSON.stringify(state.data));\n                let index = newData.findIndex((elem) => {\n                    return elem.id === id;\n                })\n                newData[index].important = !newData[index].important;\n                return {data: newData}\n            }\n        )\n\n    }\n\n    onLike(id) {\n        this.setState(({data}) => {\n                let newData = JSON.parse(JSON.stringify(data));\n                let index = newData.findIndex((elem) => {\n                    return elem.id === id;\n                })\n                newData[index].like = !newData[index].like;\n                return {data: newData}\n            }\n        )\n\n    }\n    onFilterSelect(filter) {\n        this.setState({filter})\n    }\n\n    render() {\n        const {data, term, filter} = this.state;\n        // const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\n        const visiblePosts = this.searchPost(this.filterPost(data, filter), term);\n        let postCount = this.state.data.length;\n        let likeCount = this.state.data.filter((elem) => {\n            return elem.like == true\n        }).length;\n        return <div className={'app'}>\n            <div><AppHeader allPosts={postCount} totalLiked={likeCount}/></div>\n            <div className={'search-panel d-flex'}><SearchPanel onValueChange={this.onValueChange}/><PostStatusFilter\n                filter={filter} onFilterSelect={this.onFilterSelect}/></div>\n            <div><PostList posts={visiblePosts} onDelete={this.onDelete}\n                           onLike={this.onLike} onImportant={this.onImportant}/></div>\n            <div><PostAddForm onAdd={this.addPost}/></div>\n        </div>\n    }\n\n    onDelete(id) {\n        this.setState(({data}) => {\n            let newData = Array.from(data) //let newData = [...data] - альтернативный способ получения нового массива из data\n            let index = newData.findIndex((e) => {\n                return e.id == id //сокращенная запись let index = newdata.findIndex(e => e.id ==id)\n            })\n            newData.splice(index, 1)\n            return {data: newData}\n        })\n    }\n\n}\n","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/search-panel/index.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/app-header/index.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-status-filter/index.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list/index.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list-item/index.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-add-form/index.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/search-panel/app-search-panel.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/app-header/app-header.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list-item/post-list-item.js",["72","73","74"],"import './post-list-item.css';\nimport {Component} from 'react';\n\nconst postListItem = ({label, onDelete, onLike, onImportant, important, like}) => {\n    let classNames = \"app-list-item d-flex justify-content-between\";\n    if (important == true) {\n        classNames += \" important\"\n    }\n    if(like == true) {\n        classNames += \" like\"\n    }\n    return (<div className={classNames}>\n        <span onClick={onLike} className={'app-list-item-label'}>{label}</span>\n        <div className={classNames}>\n            <button onClick={onImportant} type='button' className='btn-star btn-sm'><i\n                className='fa fa-star'></i></button>\n            <button onClick={onDelete} type='button' className='btn-trash btn-sm'><i className='fa fa-trash-o'></i></button>\n            <i className='fa fa-heart'></i>\n        </div>\n    </div>)\n}\nexport default postListItem","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-status-filter/post-status-filter.js",["75"],"import './post-status-filter.css';\nimport react, {Component} from 'react'\n\nexport default class PostStatusFilter extends Component {\n    constructor(props) {\n        super(props);\n        this.buttons = [\n            {name: 'all', label: 'Все'},\n            {name: 'like', label: 'Понравилось'},\n            {name: 'important', label: 'Важное'}]\n    }\n\n    render() {\n\n        const buttons = this.buttons.map(({name, label}) => {\n            // тернарный оператор условия if, сокращенная запись\n            const clazz = this.props.filter === name ? 'btn-info' : 'btn-outline-secondary';\n\n            return (\n                <button key={name}\n                        className={`btn ${clazz}`}\n                        type=\"button\"\n                        onClick={() => this.props.onFilterSelect(name)}>{label}</button>\n            )\n        });\n        return (<div className='btn-group'>\n            {buttons}\n        </div>)\n    }\n\n}\n\n","/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-list/post-list.js",[],"/Users/ruslannemtcev/PhpstormProjects/to-do-list/src/components/post-add-form/post-add-form.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":55,"column":34,"nodeType":"82","messageId":"83","endLine":55,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":59,"column":39,"nodeType":"82","messageId":"83","endLine":59,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":105,"column":30,"nodeType":"82","messageId":"83","endLine":105,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":121,"column":29,"nodeType":"82","messageId":"83","endLine":121,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":6,"column":19,"nodeType":"82","messageId":"83","endLine":6,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":9,"column":13,"nodeType":"82","messageId":"83","endLine":9,"endColumn":15},{"ruleId":"84","severity":1,"message":"88","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]